# ----- SCHEMA -----
type User {
  id: String!
  firstName: String!
  lastName: String!
  email: String!
  role: String!
  posts: [Post!]!
  userAppointments: [Appointment!]!
  tutorAppointments: [Appointment!]!
}

type Post {
  id: String!
  title: String!
  content: String
  published: Boolean!
  authorId: String!
  author: User!
  appointments: [Appointment!]!
}

type Appointment {
  id: ID!
  date: String!
  userId: String!
  user: User!
  tutorId: String!
  tutor: User!
  postId: String!
  post: Post!
}



# ----- QUERIES ----- Read
type Query {
  users: [User!]!
  posts: [Post!]!
  appointments: [Appointment!]!
  user(id: String!): User!
  post(id: String!): Post!
  appointment(id: String!): Appointment!
}

# ----- MUTATIONS ----- Create, Update, Delete
type Mutation {
  createUser(input: CreateUserInput!): User!
  createPost(input: CreatePostInput): Post!
  createAppointment(input: CreateAppointmentInput): Appointment!
  updateUser(id: String!, input: UpdateUserInput): User!
  updatePost(id: String!, input: UpdatePostInput): Post!
  deleteUser(id: String!): User!
  deletePost(id: String!): Post!
}

# ----- INPUTS -----
# Create
input CreateUserInput {
  firstName: String!
  lastName: String!
  email: String!
  password_hash: String!
  role: String!
}

input CreatePostInput {
  title: String!
  content: String
  published: Boolean
  authorId: String!
}

input CreateAppointmentInput {
  date: String!
  userId: String!
  tutorId: String!
  postId: String!
}

# Update
input UpdateUserInput {
  firstName: String
  lastName: String
  email: String
  role: String
}

input UpdatePostInput {
  title: String
  content: String
  published: Boolean
}

# Delete
